{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mihail\\\\dev\\\\mesto-react-auth\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport Header from \"./Header/Header.jsx\";\nimport Main from \"./Main/Main.jsx\";\nimport Footer from \"./Footer/Footer.jsx\";\nimport PopupWithForm from \"./PopupWithForm/PopupWithForm.jsx\";\nimport EditProfilePopup from \"./EditProfilePopup/EditProfilePopup.jsx\";\nimport ImagePopup from \"./ImagePopup/ImagePopup.jsx\";\nimport EditAvatarPopup from \"./EditAvatarPopup/EditAvatarPopup.jsx\";\nimport api from \"../utils/api.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport { useState, useEffect } from \"react\";\nimport AddPlacePopup from \"./AddPlacePopup/AddPlacePopup.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isDelCardPopupOpen, setDelCardPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [isImagePopup, setIsImagePopup] = useState(false);\n  const [isLoadingPopup, setIsLoadingPopup] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoadingCards, setIsLoadingCards] = useState(true);\n  const [delCardId, setDelCardId] = useState(\"\");\n  useEffect(() => {\n    setIsLoadingCards(true);\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(([userData, cardData]) => {\n      setCurrentUser(userData);\n      setCards(cardData);\n      setIsLoadingCards(false);\n    }).catch(error => console.error(`Ошибка при загрузке данных ${error}`));\n  }, []);\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsImagePopup(false);\n    setDelCardPopupOpen(false);\n  };\n  const handleCardClick = card => {\n    setSelectedCard(card);\n    setIsImagePopup(true);\n  };\n  const handleDelCardClick = cardId => {\n    setDelCardId(cardId);\n    setDelCardPopupOpen(true);\n  };\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(error => console.error(`Ошибка при установке лайка ${error}`));\n  }\n  function handleCardDel(evt) {\n    evt.preventDefault();\n    setIsLoadingPopup(true);\n    api.deleteCard(delCardId).then(() => {\n      setCards(cards => cards.filter(card => card._id !== delCardId));\n      closeAllPopups();\n      setIsLoadingPopup(false);\n    }).catch(error => console.error(`Ошибка при удалении карточки ${error}`)).finally(() => setIsLoadingPopup(false));\n  }\n  function handleSubmit(request, resetForm, errorMessage = \"Ошибка при выполнении запроса\") {\n    setIsLoadingPopup(true);\n    request().then(() => {\n      closeAllPopups();\n      if (resetForm) {\n        resetForm();\n      }\n    }).catch(error => console.error(`${errorMessage} ${error}`)).finally(() => setIsLoadingPopup(false));\n  }\n  function handleUpdateUser(userData, resetForm) {\n    handleSubmit(() => api.sendUserInfo(userData).then(res => setCurrentUser(res)), resetForm, \"Ошибка при редактировании профиля\");\n  }\n  function handleUpdateAvatar(userData, resetForm) {\n    handleSubmit(() => api.setUserAvatar(userData).then(res => setCurrentUser(res)), resetForm, \"Ошибка при редактировании аватара\");\n  }\n  function handleAddPlaceSubmit(cardData, resetForm) {\n    handleSubmit(() => api.sendNewCardInfo(cardData).then(newCard => setCards([newCard, ...cards])), resetForm, \"Ошибка при добавлении новой карточки\");\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: () => setIsEditProfilePopupOpen(true),\n          onAddPlace: () => setIsAddPlacePopupOpen(true),\n          onEditAvatar: () => setIsEditAvatarPopupOpen(true),\n          onDelCard: handleDelCardClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          isLoading: isLoadingCards,\n          onCardLike: handleCardLike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser,\n        isLoadingPopup: isLoadingPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit,\n        isLoadingPopup: isLoadingPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar,\n        isLoadingPopup: isLoadingPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"delete-card\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        titleBtn: \"\\u0414\\u0430\",\n        isOpen: isDelCardPopupOpen,\n        onClose: closeAllPopups,\n        onSubmit: handleCardDel,\n        isLoadingPopup: isLoadingPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        isOpen: isImagePopup,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n        isOpen: isInfoToolTipOpen,\n        onClose: closeAllPopups\n        //isSuccess={isSuccess}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mii3jVP3TMfPXBNg5PoChIYTo3o=\");\n_c = App;\nexport default App;\n\n// import Header from \"./Header/Header.jsx\";\n// import Main from \"./Main/Main.jsx\";\n// import Footer from \"./Footer/Footer.jsx\";\n// import PopupWithForm from \"./PopupWithForm/PopupWithForm.jsx\";\n// import EditProfilePopup from \"./EditProfilePopup/EditProfilePopup.jsx\";\n// import ImagePopup from \"./ImagePopup/ImagePopup.jsx\";\n// import EditAvatarPopup from \"./EditAvatarPopup/EditAvatarPopup.jsx\";\n// import api from \"../utils/api.js\";\n// import CurrentUserContext from \"../contexts/CurrentUserContext.js\";\n// import { useState, useEffect } from \"react\";\n// import AddPlacePopup from \"./AddPlacePopup/AddPlacePopup.jsx\";\n\n// function App() {\n//   //стейт переменные попапов\n//   const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n//   const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n//   const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n//   const [isDelCardPopupOpen, setDelCardPopupOpen] = useState(false);\n//   const [selectedCard, setSelectedCard] = useState({});\n//   const [isImagePopup, setIsImagePopup] = useState(false);\n//   const [isLoadingPopup, setIsLoadingPopup] = useState(false);\n//   //стейт переменные котекста\n//   const [currentUser, setCurrentUser] = useState({});\n//   //стейт переменные карточек\n//   const [cards, setCards] = useState([]);\n//   const [isLoadingCards, setIsLoadingCards] = useState(true);\n\n//   const [delCardId, setDelCardId] = useState(\"\");\n\n//   function handleEditProfileClick() {\n//     setIsEditProfilePopupOpen(true);\n//   }\n\n//   const handleAddPlaceClick = () => {\n//     setIsAddPlacePopupOpen(true);\n//   };\n\n//   function handleEditAvatarClick() {\n//     setIsEditAvatarPopupOpen(true);\n//   }\n\n//   function closeAllPopups() {\n//     setIsEditProfilePopupOpen(false);\n//     setIsAddPlacePopupOpen(false);\n//     setIsEditAvatarPopupOpen(false);\n//     setIsImagePopup(false);\n//     setDelCardPopupOpen(false);\n//   }\n\n//   function handleCardClick(card) {\n//     setSelectedCard(card);\n//     setIsImagePopup(true);\n//   }\n\n//   function handleDelCardClick(cardId) {\n//     setDelCardId(cardId);\n//     setDelCardPopupOpen(true);\n//   }\n\n//   useEffect(() => {\n//     setIsLoadingCards(true);\n//     Promise.all([api.getUserInfo(), api.getInitialCards()])\n//       .then(([userData, cardData]) => {\n//         setCurrentUser(userData);\n\n//         setCards(cardData);\n//         setIsLoadingCards(false);\n//       })\n//       .catch((error) => console.error(`Ошибка при загрузке данных ${error}`));\n//   }, []);\n\n//   function handleCardLike(card) {\n//     const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n//     api\n//       .changeLikeCardStatus(card._id, !isLiked)\n//       .then((newCard) => {\n//         setCards((state) =>\n//           state.map((c) => (c._id === card._id ? newCard : c))\n//         );\n//       })\n//       .catch((error) => console.error(`Ошибка при установке лайка ${error}`));\n//   }\n\n// function handleCardDel(evt) {\n//   evt.preventDefault();\n//   setIsLoadingPopup(true);\n//   api\n//     .deleteCard(delCardId)\n//     .then(() => {\n//       setCards((cards) => cards.filter((card) => card._id !== delCardId));\n//       closeAllPopups();\n//       setIsLoadingPopup(false);\n//     })\n//     .catch((error) => console.error(`Ошибка при удалении карточки ${error}`)); //\n// }\n\n// function handleUpdateUser(userData, resetForm ) {\n//   setIsLoadingPopup(true);\n//   api\n//     .sendUserInfo(userData)\n//     .then((res) => {\n//       setCurrentUser(res);\n//       closeAllPopups();\n//       resetForm();\n//       setIsLoadingPopup(false);\n//     })\n//     .catch((error) =>\n//       console.error(`Ошибка при редактировании профиля ${error}`)\n//     );\n// }\n\n// function handleUpdateAvatar(userData, resetForm) {\n//   setIsLoadingPopup(true);\n//   api\n//     .setUserAvatar(userData)\n//     .then((res) => {\n//       setCurrentUser(res);\n//       closeAllPopups();\n//       resetForm();\n//       setIsLoadingPopup(false);\n//     })\n//     .catch((error) =>\n//       console.error(`Ошибка при редактировании аватара ${error}`)\n//     );\n// }\n\n// function handleAddPlaceSubmit(cardData, resetForm) {\n//   setIsLoadingPopup(true);\n//   api\n//     .sendNewCardInfo(cardData)\n//     .then((newCard) => {\n//       console.log(newCard);\n//       setCards([newCard, ...cards]);\n//       closeAllPopups();\n//       resetForm();\n//     })\n//     .catch((error) =>\n//       console.error(`Ошибка при добавлении новой карточки ${error}`)\n//     )\n//     .finally(() => {\n//       setIsLoadingPopup(false);\n//     });\n// }\n\n//   return (\n//     <CurrentUserContext.Provider value={currentUser}>\n//       <div className=\"page\">\n//         <Header />\n\n//         <Main\n//           onEditProfile={handleEditProfileClick}\n//           onAddPlace={handleAddPlaceClick}\n//           onEditAvatar={handleEditAvatarClick}\n//           onDelCard={handleDelCardClick}\n//           onCardClick={handleCardClick}\n//           cards={cards}\n//           isLoading={isLoadingCards}\n//           onCardLike={handleCardLike}\n//         />\n\n//         <Footer />\n\n//         {/* попап редактирования профиля */}\n//         <EditProfilePopup\n//           isOpen={isEditProfilePopupOpen}\n//           onClose={closeAllPopups}\n//           onUpdateUser={handleUpdateUser}\n//           isLoadingPopup={isLoadingPopup}\n//         />\n\n//         {/* попап добавления нового места */}\n//         <AddPlacePopup\n//           isOpen={isAddPlacePopupOpen}\n//           onClose={closeAllPopups}\n//           onAddPlace={handleAddPlaceSubmit}\n//           isLoadingPopup={isLoadingPopup}\n//         />\n\n//         {/* попап редактирования аватара */}\n\n//         <EditAvatarPopup\n//           isOpen={isEditAvatarPopupOpen}\n//           onClose={closeAllPopups}\n//           onUpdateAvatar={handleUpdateAvatar}\n//           isLoadingPopup={isLoadingPopup}\n//         />\n\n//         {/* попап удаления карточки */}\n//         <PopupWithForm\n//           name=\"delete-card\"\n//           title=\"Вы уверены?\"\n//           titleBtn=\"Да\"\n//           isOpen={isDelCardPopupOpen}\n//           onClose={closeAllPopups}\n//           onSubmit={handleCardDel}\n//           isLoadingPopup={isLoadingPopup}\n//         />\n\n//         {/* popup zoom */}\n\n//         <ImagePopup\n//           card={selectedCard}\n//           isOpen={isImagePopup}\n//           onClose={closeAllPopups}\n//         />\n//       </div>\n//     </CurrentUserContext.Provider>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Footer","PopupWithForm","EditProfilePopup","ImagePopup","EditAvatarPopup","api","CurrentUserContext","useState","useEffect","AddPlacePopup","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDelCardPopupOpen","setDelCardPopupOpen","selectedCard","setSelectedCard","isImagePopup","setIsImagePopup","isLoadingPopup","setIsLoadingPopup","currentUser","setCurrentUser","cards","setCards","isLoadingCards","setIsLoadingCards","delCardId","setDelCardId","Promise","all","getUserInfo","getInitialCards","then","userData","cardData","catch","error","console","closeAllPopups","handleCardClick","card","handleDelCardClick","cardId","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDel","evt","preventDefault","deleteCard","filter","finally","handleSubmit","request","resetForm","errorMessage","handleUpdateUser","sendUserInfo","res","handleUpdateAvatar","setUserAvatar","handleAddPlaceSubmit","sendNewCardInfo","Provider","value","children","className","Routes","fileName","_jsxFileName","lineNumber","columnNumber","onEditProfile","onAddPlace","onEditAvatar","onDelCard","onCardClick","isLoading","onCardLike","isOpen","onClose","onUpdateUser","onUpdateAvatar","name","title","titleBtn","onSubmit","InfoToolTip","isInfoToolTipOpen","_c","$RefreshReg$"],"sources":["C:/Users/Mihail/dev/mesto-react-auth/src/components/App.jsx"],"sourcesContent":["import Header from \"./Header/Header.jsx\";\r\nimport Main from \"./Main/Main.jsx\";\r\nimport Footer from \"./Footer/Footer.jsx\";\r\nimport PopupWithForm from \"./PopupWithForm/PopupWithForm.jsx\";\r\nimport EditProfilePopup from \"./EditProfilePopup/EditProfilePopup.jsx\";\r\nimport ImagePopup from \"./ImagePopup/ImagePopup.jsx\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup/EditAvatarPopup.jsx\";\r\nimport api from \"../utils/api.js\";\r\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\r\nimport { useState, useEffect } from \"react\";\r\nimport AddPlacePopup from \"./AddPlacePopup/AddPlacePopup.jsx\";\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isDelCardPopupOpen, setDelCardPopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [isImagePopup, setIsImagePopup] = useState(false);\r\n  const [isLoadingPopup, setIsLoadingPopup] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n  const [isLoadingCards, setIsLoadingCards] = useState(true);\r\n  const [delCardId, setDelCardId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setIsLoadingCards(true);\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n      .then(([userData, cardData]) => {\r\n        setCurrentUser(userData);\r\n        setCards(cardData);\r\n        setIsLoadingCards(false);\r\n      })\r\n      .catch((error) => console.error(`Ошибка при загрузке данных ${error}`));\r\n  }, []);\r\n\r\n  const closeAllPopups = () => {\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsImagePopup(false);\r\n    setDelCardPopupOpen(false);\r\n  };\r\n\r\n  const handleCardClick = (card) => {\r\n    setSelectedCard(card);\r\n    setIsImagePopup(true);\r\n  };\r\n\r\n  const handleDelCardClick = (cardId) => {\r\n    setDelCardId(cardId);\r\n    setDelCardPopupOpen(true);\r\n  };\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n    api\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        setCards((state) =>\r\n          state.map((c) => (c._id === card._id ? newCard : c))\r\n        );\r\n      })\r\n      .catch((error) => console.error(`Ошибка при установке лайка ${error}`));\r\n  }\r\n\r\n  function handleCardDel(evt) {\r\n    evt.preventDefault();\r\n    setIsLoadingPopup(true);\r\n    api\r\n      .deleteCard(delCardId)\r\n      .then(() => {\r\n        setCards((cards) => cards.filter((card) => card._id !== delCardId));\r\n        closeAllPopups();\r\n        setIsLoadingPopup(false);\r\n      })\r\n      .catch((error) => console.error(`Ошибка при удалении карточки ${error}`))\r\n      .finally(() => setIsLoadingPopup(false));\r\n  }\r\n\r\n  function handleSubmit(\r\n    request,\r\n    resetForm,\r\n    errorMessage = \"Ошибка при выполнении запроса\"\r\n  ) {\r\n    setIsLoadingPopup(true);\r\n    request()\r\n      .then(() => {\r\n        closeAllPopups();\r\n        if (resetForm) {\r\n          resetForm();\r\n        }\r\n      })\r\n      .catch((error) => console.error(`${errorMessage} ${error}`))\r\n      .finally(() => setIsLoadingPopup(false));\r\n  }\r\n\r\n  function handleUpdateUser(userData, resetForm) {\r\n    handleSubmit(\r\n      () => api.sendUserInfo(userData).then((res) => setCurrentUser(res)),\r\n      resetForm,\r\n      \"Ошибка при редактировании профиля\"\r\n    );\r\n  }\r\n\r\n  function handleUpdateAvatar(userData, resetForm) {\r\n    handleSubmit(\r\n      () => api.setUserAvatar(userData).then((res) => setCurrentUser(res)),\r\n      resetForm,\r\n      \"Ошибка при редактировании аватара\"\r\n    );\r\n  }\r\n\r\n  function handleAddPlaceSubmit(cardData, resetForm) {\r\n    handleSubmit(\r\n      () =>\r\n        api\r\n          .sendNewCardInfo(cardData)\r\n          .then((newCard) => setCards([newCard, ...cards])),\r\n      resetForm,\r\n      \"Ошибка при добавлении новой карточки\"\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Routes>\r\n          <Header />\r\n          <Main\r\n            onEditProfile={() => setIsEditProfilePopupOpen(true)}\r\n            onAddPlace={() => setIsAddPlacePopupOpen(true)}\r\n            onEditAvatar={() => setIsEditAvatarPopupOpen(true)}\r\n            onDelCard={handleDelCardClick}\r\n            onCardClick={handleCardClick}\r\n            cards={cards}\r\n            isLoading={isLoadingCards}\r\n            onCardLike={handleCardLike}\r\n          />\r\n          <Footer />\r\n        </Routes>\r\n\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n          isLoadingPopup={isLoadingPopup}\r\n        />\r\n\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n          isLoadingPopup={isLoadingPopup}\r\n        />\r\n\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n          isLoadingPopup={isLoadingPopup}\r\n        />\r\n\r\n        <PopupWithForm\r\n          name=\"delete-card\"\r\n          title=\"Вы уверены?\"\r\n          titleBtn=\"Да\"\r\n          isOpen={isDelCardPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onSubmit={handleCardDel}\r\n          isLoadingPopup={isLoadingPopup}\r\n        />\r\n\r\n        <ImagePopup\r\n          card={selectedCard}\r\n          isOpen={isImagePopup}\r\n          onClose={closeAllPopups}\r\n        />\r\n\r\n        <InfoToolTip\r\n          isOpen={isInfoToolTipOpen}\r\n          onClose={closeAllPopups}\r\n          //isSuccess={isSuccess}\r\n      />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n// import Header from \"./Header/Header.jsx\";\r\n// import Main from \"./Main/Main.jsx\";\r\n// import Footer from \"./Footer/Footer.jsx\";\r\n// import PopupWithForm from \"./PopupWithForm/PopupWithForm.jsx\";\r\n// import EditProfilePopup from \"./EditProfilePopup/EditProfilePopup.jsx\";\r\n// import ImagePopup from \"./ImagePopup/ImagePopup.jsx\";\r\n// import EditAvatarPopup from \"./EditAvatarPopup/EditAvatarPopup.jsx\";\r\n// import api from \"../utils/api.js\";\r\n// import CurrentUserContext from \"../contexts/CurrentUserContext.js\";\r\n// import { useState, useEffect } from \"react\";\r\n// import AddPlacePopup from \"./AddPlacePopup/AddPlacePopup.jsx\";\r\n\r\n// function App() {\r\n//   //стейт переменные попапов\r\n//   const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n//   const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n//   const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n//   const [isDelCardPopupOpen, setDelCardPopupOpen] = useState(false);\r\n//   const [selectedCard, setSelectedCard] = useState({});\r\n//   const [isImagePopup, setIsImagePopup] = useState(false);\r\n//   const [isLoadingPopup, setIsLoadingPopup] = useState(false);\r\n//   //стейт переменные котекста\r\n//   const [currentUser, setCurrentUser] = useState({});\r\n//   //стейт переменные карточек\r\n//   const [cards, setCards] = useState([]);\r\n//   const [isLoadingCards, setIsLoadingCards] = useState(true);\r\n\r\n//   const [delCardId, setDelCardId] = useState(\"\");\r\n\r\n//   function handleEditProfileClick() {\r\n//     setIsEditProfilePopupOpen(true);\r\n//   }\r\n\r\n//   const handleAddPlaceClick = () => {\r\n//     setIsAddPlacePopupOpen(true);\r\n//   };\r\n\r\n//   function handleEditAvatarClick() {\r\n//     setIsEditAvatarPopupOpen(true);\r\n//   }\r\n\r\n//   function closeAllPopups() {\r\n//     setIsEditProfilePopupOpen(false);\r\n//     setIsAddPlacePopupOpen(false);\r\n//     setIsEditAvatarPopupOpen(false);\r\n//     setIsImagePopup(false);\r\n//     setDelCardPopupOpen(false);\r\n//   }\r\n\r\n//   function handleCardClick(card) {\r\n//     setSelectedCard(card);\r\n//     setIsImagePopup(true);\r\n//   }\r\n\r\n//   function handleDelCardClick(cardId) {\r\n//     setDelCardId(cardId);\r\n//     setDelCardPopupOpen(true);\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     setIsLoadingCards(true);\r\n//     Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n//       .then(([userData, cardData]) => {\r\n//         setCurrentUser(userData);\r\n\r\n//         setCards(cardData);\r\n//         setIsLoadingCards(false);\r\n//       })\r\n//       .catch((error) => console.error(`Ошибка при загрузке данных ${error}`));\r\n//   }, []);\r\n\r\n//   function handleCardLike(card) {\r\n//     const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n//     api\r\n//       .changeLikeCardStatus(card._id, !isLiked)\r\n//       .then((newCard) => {\r\n//         setCards((state) =>\r\n//           state.map((c) => (c._id === card._id ? newCard : c))\r\n//         );\r\n//       })\r\n//       .catch((error) => console.error(`Ошибка при установке лайка ${error}`));\r\n//   }\r\n\r\n// function handleCardDel(evt) {\r\n//   evt.preventDefault();\r\n//   setIsLoadingPopup(true);\r\n//   api\r\n//     .deleteCard(delCardId)\r\n//     .then(() => {\r\n//       setCards((cards) => cards.filter((card) => card._id !== delCardId));\r\n//       closeAllPopups();\r\n//       setIsLoadingPopup(false);\r\n//     })\r\n//     .catch((error) => console.error(`Ошибка при удалении карточки ${error}`)); //\r\n// }\r\n\r\n// function handleUpdateUser(userData, resetForm ) {\r\n//   setIsLoadingPopup(true);\r\n//   api\r\n//     .sendUserInfo(userData)\r\n//     .then((res) => {\r\n//       setCurrentUser(res);\r\n//       closeAllPopups();\r\n//       resetForm();\r\n//       setIsLoadingPopup(false);\r\n//     })\r\n//     .catch((error) =>\r\n//       console.error(`Ошибка при редактировании профиля ${error}`)\r\n//     );\r\n// }\r\n\r\n// function handleUpdateAvatar(userData, resetForm) {\r\n//   setIsLoadingPopup(true);\r\n//   api\r\n//     .setUserAvatar(userData)\r\n//     .then((res) => {\r\n//       setCurrentUser(res);\r\n//       closeAllPopups();\r\n//       resetForm();\r\n//       setIsLoadingPopup(false);\r\n//     })\r\n//     .catch((error) =>\r\n//       console.error(`Ошибка при редактировании аватара ${error}`)\r\n//     );\r\n// }\r\n\r\n// function handleAddPlaceSubmit(cardData, resetForm) {\r\n//   setIsLoadingPopup(true);\r\n//   api\r\n//     .sendNewCardInfo(cardData)\r\n//     .then((newCard) => {\r\n//       console.log(newCard);\r\n//       setCards([newCard, ...cards]);\r\n//       closeAllPopups();\r\n//       resetForm();\r\n//     })\r\n//     .catch((error) =>\r\n//       console.error(`Ошибка при добавлении новой карточки ${error}`)\r\n//     )\r\n//     .finally(() => {\r\n//       setIsLoadingPopup(false);\r\n//     });\r\n// }\r\n\r\n//   return (\r\n//     <CurrentUserContext.Provider value={currentUser}>\r\n//       <div className=\"page\">\r\n//         <Header />\r\n\r\n//         <Main\r\n//           onEditProfile={handleEditProfileClick}\r\n//           onAddPlace={handleAddPlaceClick}\r\n//           onEditAvatar={handleEditAvatarClick}\r\n//           onDelCard={handleDelCardClick}\r\n//           onCardClick={handleCardClick}\r\n//           cards={cards}\r\n//           isLoading={isLoadingCards}\r\n//           onCardLike={handleCardLike}\r\n//         />\r\n\r\n//         <Footer />\r\n\r\n//         {/* попап редактирования профиля */}\r\n//         <EditProfilePopup\r\n//           isOpen={isEditProfilePopupOpen}\r\n//           onClose={closeAllPopups}\r\n//           onUpdateUser={handleUpdateUser}\r\n//           isLoadingPopup={isLoadingPopup}\r\n//         />\r\n\r\n//         {/* попап добавления нового места */}\r\n//         <AddPlacePopup\r\n//           isOpen={isAddPlacePopupOpen}\r\n//           onClose={closeAllPopups}\r\n//           onAddPlace={handleAddPlaceSubmit}\r\n//           isLoadingPopup={isLoadingPopup}\r\n//         />\r\n\r\n//         {/* попап редактирования аватара */}\r\n\r\n//         <EditAvatarPopup\r\n//           isOpen={isEditAvatarPopupOpen}\r\n//           onClose={closeAllPopups}\r\n//           onUpdateAvatar={handleUpdateAvatar}\r\n//           isLoadingPopup={isLoadingPopup}\r\n//         />\r\n\r\n//         {/* попап удаления карточки */}\r\n//         <PopupWithForm\r\n//           name=\"delete-card\"\r\n//           title=\"Вы уверены?\"\r\n//           titleBtn=\"Да\"\r\n//           isOpen={isDelCardPopupOpen}\r\n//           onClose={closeAllPopups}\r\n//           onSubmit={handleCardDel}\r\n//           isLoadingPopup={isLoadingPopup}\r\n//         />\r\n\r\n//         {/* popup zoom */}\r\n\r\n//         <ImagePopup\r\n//           card={selectedCard}\r\n//           isOpen={isImagePopup}\r\n//           onClose={closeAllPopups}\r\n//         />\r\n//       </div>\r\n//     </CurrentUserContext.Provider>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}