{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mihail\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\EditProfilePopup\\\\EditProfilePopup.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect } from \"react\";\nimport CurrentUserContext from \"../../contexts/CurrentUserContext\";\nimport useFormValidate from \"../../utils/hooks/useFormValidate\";\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditProfilePopup({\n  isOpen,\n  onClose,\n  onUpdateUser,\n  isLoadingPopup\n}) {\n  _s();\n  const currentUser = useContext(CurrentUserContext);\n  const {\n    formValues,\n    errors,\n    isFormValid,\n    isInputValid,\n    handleChange,\n    resetForm,\n    setInitialValue\n  } = useFormValidate();\n  useEffect(() => {\n    setInitialValue(\"username\", currentUser.name);\n    setInitialValue(\"job\", currentUser.about);\n  }, [currentUser, setInitialValue]);\n  function handleClosePopupResetForm() {\n    onClose();\n    resetForm({\n      username: currentUser.name,\n      job: currentUser.about\n    });\n  }\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateUser(formValues, resetForm);\n  }\n  const inputErrorClass = input => input in isInputValid && !isInputValid[input] ? \"form__input_type_error\" : \"\";\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"edit-profile\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    titleBtn: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: isOpen,\n    onClose: handleClosePopupResetForm,\n    isFormValid: isFormValid,\n    onSubmit: handleSubmit,\n    isLoadingPopup: isLoadingPopup,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form__label\",\n      htmlFor: \"username\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        className: `form__input form__input_type_name ${inputErrorClass(\"username\")}`,\n        name: \"username\",\n        minLength: 2,\n        maxLength: 40,\n        type: \"text\",\n        required: true,\n        placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n        value: formValues.username || \"\",\n        disabled: isLoadingPopup,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"form__span-error username-error\",\n        children: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form__label\",\n      htmlFor: \"job\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"job\",\n        className: `form__input form__input_type_job ${inputErrorClass(\"job\")}`,\n        name: \"job\",\n        minLength: 2,\n        maxLength: 200,\n        type: \"text\",\n        required: true,\n        placeholder: \"\\u041E \\u0432\\u0430\\u0441\",\n        value: formValues.job || \"\",\n        disabled: isLoadingPopup,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"form__span-error job-error\",\n        children: [errors.job, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n// import { useContext, useEffect } from \"react\";\n// import CurrentUserContext from \"../../contexts/CurrentUserContext\";\n// import useFormValidate from \"../../utils/hooks/useFormValidate\";\n// import PopupWithForm from \"../PopupWithForm/PopupWithForm\";\n\n// export default function EditProfilePopup({isOpen, onClose, onUpdateUser, isLoadingPopup }) {\n//   const currentUser = useContext(CurrentUserContext)\n//   //const {name, about} = currentUser\n\n//   const {\n//     formValues,\n//     errors,\n//     isFormValid,\n//     isInputValid,\n//     handleChange,\n//     resetForm,\n//     setInitialValue\n\n//   } = useFormValidate();\n\n//   useEffect(() => {\n//     setInitialValue(\"username\", currentUser.name)\n//     setInitialValue(\"job\", currentUser.about)\n//   }, [currentUser, setInitialValue])\n\n//   function handleClosePopupResetForm() {\n//     onClose()\n//     resetForm({username: currentUser.name, job: currentUser.about})\n//   }\n\n//   // function handleSubmit(evt) {\n//   //   evt.preventDefault();\n//   //   onUpdateUser({\n//   //     username: formValues.username,\n//   //     job: formValues.job,\n\n//   //   }, resetForm);\n\n//   // }\n\n//   function handleSubmit(evt) {\n//     evt.preventDefault();\n//     onUpdateUser(formValues, resetForm);\n//   }\n\n//   return(\n//     <PopupWithForm\n//       name='edit-profile'\n//       title='Редактировать профиль'\n//       titleBtn='Сохранить'\n//       isOpen={ isOpen }\n//       onClose={ handleClosePopupResetForm }\n//       isFormValid = { isFormValid }\n//       isLoadingPopup = { isLoadingPopup }\n//       onSubmit={handleSubmit}\n\n//     >\n//       <label className=\"form__label\" htmlFor=\"username\">\n//         <input\n//           id=\"username\"\n//           className={`form__input form__input_type_name ${isInputValid.username === undefined || isInputValid.username ? '' :'form__input_type_error'}`}\n//           name=\"username\"\n//           minLength={2}\n//           maxLength={40}\n//           type=\"text\"\n//           required\n//           placeholder=\"Ваше имя\"\n//           value={formValues.username || ''}\n//           disabled = {isLoadingPopup}\n\n//           onChange={handleChange}\n//         />\n//         <span className=\"form__span-error username-error\">{errors.username}</span>\n//       </label>\n//       <label className=\"form__label\" htmlFor=\"job\">\n//         <input\n//           id=\"job\"\n//           className={`form__input form__input_type_job ${isInputValid.job === undefined || isInputValid.job ? '' :'form__input_type_error'}`}\n//           name=\"job\"\n//           minLength={2}\n//           maxLength={200}\n//           type=\"text\"\n//           required\n//           placeholder=\"О вас\"\n//           value={formValues.job || ''}\n//           disabled = {isLoadingPopup}\n//           onChange={handleChange}\n//         />\n//         <span className=\"form__span-error job-error\">{errors.job} </span>\n//       </label>\n//     </PopupWithForm>\n\n//   )\n// }\n_s(EditProfilePopup, \"mbpd+wtZED6SQ/AR1XsY53Sqk6o=\", false, function () {\n  return [useFormValidate];\n});\n_c = EditProfilePopup;\nvar _c;\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"names":["useContext","useEffect","CurrentUserContext","useFormValidate","PopupWithForm","jsxDEV","_jsxDEV","EditProfilePopup","isOpen","onClose","onUpdateUser","isLoadingPopup","_s","currentUser","formValues","errors","isFormValid","isInputValid","handleChange","resetForm","setInitialValue","name","about","handleClosePopupResetForm","username","job","handleSubmit","evt","preventDefault","inputErrorClass","input","title","titleBtn","onSubmit","children","className","htmlFor","id","minLength","maxLength","type","required","placeholder","value","disabled","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mihail/dev/react-mesto-auth/src/components/EditProfilePopup/EditProfilePopup.jsx"],"sourcesContent":["import { useContext, useEffect } from \"react\";\r\nimport CurrentUserContext from \"../../contexts/CurrentUserContext\";\r\nimport useFormValidate from \"../../utils/hooks/useFormValidate\";\r\nimport PopupWithForm from \"../PopupWithForm/PopupWithForm\";\r\n\r\nexport default function EditProfilePopup({\r\n  isOpen,\r\n  onClose,\r\n  onUpdateUser,\r\n  isLoadingPopup,\r\n}) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  const {\r\n    formValues,\r\n    errors,\r\n    isFormValid,\r\n    isInputValid,\r\n    handleChange,\r\n    resetForm,\r\n    setInitialValue,\r\n  } = useFormValidate();\r\n\r\n  useEffect(() => {\r\n    setInitialValue(\"username\", currentUser.name);\r\n    setInitialValue(\"job\", currentUser.about);\r\n  }, [currentUser, setInitialValue]);\r\n\r\n  function handleClosePopupResetForm() {\r\n    onClose();\r\n    resetForm({ username: currentUser.name, job: currentUser.about });\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    onUpdateUser(formValues, resetForm);\r\n  }\r\n\r\n  const inputErrorClass = (input) =>\r\n    input in isInputValid && !isInputValid[input]\r\n      ? \"form__input_type_error\"\r\n      : \"\";\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"edit-profile\"\r\n      title=\"Редактировать профиль\"\r\n      titleBtn=\"Сохранить\"\r\n      isOpen={isOpen}\r\n      onClose={handleClosePopupResetForm}\r\n      isFormValid={isFormValid}\r\n      onSubmit={handleSubmit}\r\n      isLoadingPopup={isLoadingPopup}\r\n    >\r\n      <label className=\"form__label\" htmlFor=\"username\">\r\n        <input\r\n          id=\"username\"\r\n          className={`form__input form__input_type_name ${inputErrorClass(\r\n            \"username\"\r\n          )}`}\r\n          name=\"username\"\r\n          minLength={2}\r\n          maxLength={40}\r\n          type=\"text\"\r\n          required\r\n          placeholder=\"Ваше имя\"\r\n          value={formValues.username || \"\"}\r\n          disabled={isLoadingPopup}\r\n          onChange={handleChange}\r\n        />\r\n        <span className=\"form__span-error username-error\">\r\n          {errors.username}\r\n        </span>\r\n      </label>\r\n      <label className=\"form__label\" htmlFor=\"job\">\r\n        <input\r\n          id=\"job\"\r\n          className={`form__input form__input_type_job ${inputErrorClass(\r\n            \"job\"\r\n          )}`}\r\n          name=\"job\"\r\n          minLength={2}\r\n          maxLength={200}\r\n          type=\"text\"\r\n          required\r\n          placeholder=\"О вас\"\r\n          value={formValues.job || \"\"}\r\n          disabled={isLoadingPopup}\r\n          onChange={handleChange}\r\n        />\r\n        <span className=\"form__span-error job-error\">{errors.job} </span>\r\n      </label>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\n// import { useContext, useEffect } from \"react\";\r\n// import CurrentUserContext from \"../../contexts/CurrentUserContext\";\r\n// import useFormValidate from \"../../utils/hooks/useFormValidate\";\r\n// import PopupWithForm from \"../PopupWithForm/PopupWithForm\";\r\n\r\n// export default function EditProfilePopup({isOpen, onClose, onUpdateUser, isLoadingPopup }) {\r\n//   const currentUser = useContext(CurrentUserContext)\r\n//   //const {name, about} = currentUser\r\n\r\n//   const {\r\n//     formValues,\r\n//     errors,\r\n//     isFormValid,\r\n//     isInputValid,\r\n//     handleChange,\r\n//     resetForm,\r\n//     setInitialValue\r\n\r\n//   } = useFormValidate();\r\n\r\n//   useEffect(() => {\r\n//     setInitialValue(\"username\", currentUser.name)\r\n//     setInitialValue(\"job\", currentUser.about)\r\n//   }, [currentUser, setInitialValue])\r\n\r\n//   function handleClosePopupResetForm() {\r\n//     onClose()\r\n//     resetForm({username: currentUser.name, job: currentUser.about})\r\n//   }\r\n\r\n//   // function handleSubmit(evt) {\r\n//   //   evt.preventDefault();\r\n//   //   onUpdateUser({\r\n//   //     username: formValues.username,\r\n//   //     job: formValues.job,\r\n\r\n//   //   }, resetForm);\r\n\r\n//   // }\r\n\r\n//   function handleSubmit(evt) {\r\n//     evt.preventDefault();\r\n//     onUpdateUser(formValues, resetForm);\r\n//   }\r\n\r\n//   return(\r\n//     <PopupWithForm\r\n//       name='edit-profile'\r\n//       title='Редактировать профиль'\r\n//       titleBtn='Сохранить'\r\n//       isOpen={ isOpen }\r\n//       onClose={ handleClosePopupResetForm }\r\n//       isFormValid = { isFormValid }\r\n//       isLoadingPopup = { isLoadingPopup }\r\n//       onSubmit={handleSubmit}\r\n\r\n//     >\r\n//       <label className=\"form__label\" htmlFor=\"username\">\r\n//         <input\r\n//           id=\"username\"\r\n//           className={`form__input form__input_type_name ${isInputValid.username === undefined || isInputValid.username ? '' :'form__input_type_error'}`}\r\n//           name=\"username\"\r\n//           minLength={2}\r\n//           maxLength={40}\r\n//           type=\"text\"\r\n//           required\r\n//           placeholder=\"Ваше имя\"\r\n//           value={formValues.username || ''}\r\n//           disabled = {isLoadingPopup}\r\n\r\n//           onChange={handleChange}\r\n//         />\r\n//         <span className=\"form__span-error username-error\">{errors.username}</span>\r\n//       </label>\r\n//       <label className=\"form__label\" htmlFor=\"job\">\r\n//         <input\r\n//           id=\"job\"\r\n//           className={`form__input form__input_type_job ${isInputValid.job === undefined || isInputValid.job ? '' :'form__input_type_error'}`}\r\n//           name=\"job\"\r\n//           minLength={2}\r\n//           maxLength={200}\r\n//           type=\"text\"\r\n//           required\r\n//           placeholder=\"О вас\"\r\n//           value={formValues.job || ''}\r\n//           disabled = {isLoadingPopup}\r\n//           onChange={handleChange}\r\n//         />\r\n//         <span className=\"form__span-error job-error\">{errors.job} </span>\r\n//       </label>\r\n//     </PopupWithForm>\r\n\r\n//   )\r\n// }\r\n"],"mappings":"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C,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEpB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAArC,EAAA,CAxLwBL,gBAAgB;EAAA,QAgBlCJ,eAAe;AAAA;AAAA+C,EAAA,GAhBG3C,gBAAgB;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}