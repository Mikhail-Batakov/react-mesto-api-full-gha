{"ast":null,"code":"class Api{constructor(options){this._baseUrl=options.baseUrl;this._headers=options.headers;}//Проверяет ответ от сервера на предмет успешности запроса.\n_checkRes(res){if(res.ok){return res.json();}// если ошибка, отклоняем промис\nreturn Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}// Выполняет сетевой запрос с использованием fetch и проверяет ответ с помощью _checkResponse.\n// Возвращает результат запроса в виде промиса\n_request(baseUrl,options){return fetch(baseUrl,options).then(this._checkRes);}//Метод запроса информации о пользователе\ngetUserInfo(){return this._request(\"\".concat(this._baseUrl,\"/users/me\"),{headers:this._headers});}// Метод запроса информации о пользователе\ngetInitialCards(){return this._request(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers});}// Метод отправки информации о пользователе\nsendUserInfo(userData){return this._request(\"\".concat(this._baseUrl,\"/users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:userData.username,about:userData.job})});}// Метод установки аватара профиля\nsetUserAvatar(avatarData){return this._request(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:avatarData.avatar})});}// Метод добавления новой карточки\nsendNewCardInfo(cardData){return this._request(\"\".concat(this._baseUrl,\"/cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:cardData.name,link:cardData.link})});}// Метод удаления карточки\ndeleteCard(cardId){return this._request(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId),{method:\"DELETE\",headers:this._headers});}// // Метод установки лайков\n// setCardLike(cardId) {\n//   return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\n//     method: \"PUT\",\n//     headers: this._headers,\n//   });\n// }\n// // Метод удаления лайка карточки\n// deleteCardLike(cardId) {\n//   return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\n//     method: \"DELETE\",\n//     headers: this._headers,\n//   });\n// }\nchangeLikeCardStatus(cardId,isLiked){return this._request(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId,\"/likes\"),{method:\"\".concat(!isLiked?\"DELETE\":\"PUT\"),headers:this._headers});}}// Создание экземпляра класса\nconst api=new Api({baseUrl:\"https://mesto.nomoreparties.co/v1/cohort-77\",headers:{authorization:\"3edcdea5-b130-42c1-9a7c-9c803e968261\",\"Content-Type\":\"application/json\"}});export default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_checkRes","res","ok","json","Promise","reject","concat","status","_request","fetch","then","getUserInfo","getInitialCards","sendUserInfo","userData","method","body","JSON","stringify","name","username","about","job","setUserAvatar","avatarData","avatar","sendNewCardInfo","cardData","link","deleteCard","cardId","changeLikeCardStatus","isLiked","api","authorization"],"sources":["C:/Users/Mihail/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this._baseUrl = options.baseUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  //Проверяет ответ от сервера на предмет успешности запроса.\r\n  _checkRes(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    // если ошибка, отклоняем промис\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  // Выполняет сетевой запрос с использованием fetch и проверяет ответ с помощью _checkResponse.\r\n  // Возвращает результат запроса в виде промиса\r\n  _request(baseUrl, options) {\r\n    return fetch(baseUrl, options).then(this._checkRes);\r\n  }\r\n\r\n  //Метод запроса информации о пользователе\r\n  getUserInfo() {\r\n    return this._request(`${this._baseUrl}/users/me`, {\r\n      headers: this._headers,\r\n    });\r\n  }\r\n  // Метод запроса информации о пользователе\r\n  getInitialCards() {\r\n    return this._request(`${this._baseUrl}/cards`, {\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  // Метод отправки информации о пользователе\r\n  sendUserInfo(userData) {\r\n    return this._request(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: userData.username,\r\n        about: userData.job,\r\n      }),\r\n    });\r\n  }\r\n\r\n  // Метод установки аватара профиля\r\n  setUserAvatar(avatarData) {\r\n    return this._request(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: avatarData.avatar,\r\n      }),\r\n    });\r\n  }\r\n\r\n  // Метод добавления новой карточки\r\n  sendNewCardInfo(cardData) {\r\n    return this._request(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: cardData.name,\r\n        link: cardData.link,\r\n      }),\r\n    });\r\n  }\r\n\r\n  // Метод удаления карточки\r\n  deleteCard(cardId) {\r\n    return this._request(`${this._baseUrl}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    });\r\n  }\r\n\r\n  // // Метод установки лайков\r\n  // setCardLike(cardId) {\r\n  //   return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n  //     method: \"PUT\",\r\n  //     headers: this._headers,\r\n  //   });\r\n  // }\r\n\r\n  // // Метод удаления лайка карточки\r\n  // deleteCardLike(cardId) {\r\n  //   return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n  //     method: \"DELETE\",\r\n  //     headers: this._headers,\r\n  //   });\r\n  // }\r\n\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    return this._request(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n      method: `${!isLiked ? \"DELETE\" : \"PUT\"}`,\r\n      headers: this._headers,\r\n    });\r\n  }\r\n}\r\n\r\n// Создание экземпляра класса\r\nconst api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-77\",\r\n  headers: {\r\n    authorization: \"3edcdea5-b130-42c1-9a7c-9c803e968261\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}